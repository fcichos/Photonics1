{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "79c3ba24-85ee-4cc6-822f-bc887c39c32a",
   "metadata": {},
   "source": [
    "# General Optics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "599f704d-edf0-4c94-a81e-fa5578561d6b",
   "metadata": {
    "nbsphinx": "hidden",
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import ipywidgets as widgets\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "plt.rcParams.update({'font.size': 10,\n",
    "                     'lines.linewidth': 1,\n",
    "                     'lines.markersize': 10,\n",
    "                     'axes.labelsize': 11,\n",
    "                     'xtick.labelsize' : 10,\n",
    "                     'ytick.labelsize' : 10,\n",
    "                     'xtick.top' : True,\n",
    "                     'xtick.direction' : 'in',\n",
    "                     'ytick.right' : True,\n",
    "                     'ytick.direction' : 'in',}) \n",
    "\n",
    "%config InlineBackend.figure_format = 'retina'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1969da58-9850-4167-b1fc-894af4913cd9",
   "metadata": {},
   "source": [
    "## Ray Optics"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c10764b0-c742-4571-92ea-a7fd7335640d",
   "metadata": {},
   "source": [
    "Ray optics delivers the simplest mathematical description of light propagation, which is despite of its simplifications very powerful. However, it does not provide any insights into the physical mechanisms that govern the propagation of light. \n",
    "\n",
    "Geometrical or ray optics is therefore based on a number of assumptions for light propagation, i.e.\n",
    "\n",
    "- light travels in form of rays, which are emitted by light sources and detected by detectors\n",
    "- the effect of a medium on the light propagation is described by the refractive index $n=c_{0}/c$\n",
    "- light takes time to travels a distance $d$ which is given by $t=d/c=nd/c_{0}$\n",
    "- $n d $ therefore amounts to the optical path length\n",
    "\n",
    "You see on these assumptions, that this is not really satisfying. We do neither really know what is propagation with the speed of light, nor where the refractive index comes from. This is something we need to address later, when we consider electromagnetic waves.\n",
    "\n",
    "Based on this, we also can only infer from observations the laws that govern ray optics, i.e. the law of reflection and refraction. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e8a6986-5b1e-4af3-a4c7-74430100723e",
   "metadata": {},
   "source": [
    "### Law of reflection"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ac967b6-8597-4e82-b2c2-0483098bf9ae",
   "metadata": {},
   "source": [
    "| <center> <img src=\"law_of_reflection.png\" width=\"300\"/> </center> |\n",
    "|:-:|\n",
    "| **Figure 1:** Law of reflection |"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df35619a-8948-4f4e-89c0-9909d955f548",
   "metadata": {},
   "source": [
    "The law of reflection is the simplest one. It states, that the angle of incidence and the angle of reflection are always equal.\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_{1}=\\theta_{3}\n",
    "\\end{equation}\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b297356-ae47-4d86-92b1-2c21d1ee82df",
   "metadata": {
    "tags": []
   },
   "source": [
    "### Law of refraction"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c48e8ef2-db27-4fab-945f-a4491ecd8e86",
   "metadata": {},
   "source": [
    "| <center> <img src=\"law_of_refraction.png\" width=\"300\"/> </center> |\n",
    "|:-:|\n",
    "| **Figure 1:** Law of refraction |"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b15736a-09c5-492e-9331-0627e51550e8",
   "metadata": {},
   "source": [
    "\\begin{equation}\n",
    "n_{1}\\sin(\\theta_{1})=n_{2}\\sin(\\theta_{2})\n",
    "\\end{equation}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63acb811-a179-4dff-bda1-3ced537ff428",
   "metadata": {},
   "source": [
    "The law of refraction is known as Snell's law and relates the incident angle $\\theta_1$ with the angle of the refracted ray $\\theta_2$."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03def5d8-c94e-4556-8090-4638d97d83c9",
   "metadata": {},
   "source": [
    "With this law of refraction, there are a number of special situations, that occur. This is for example the total internal refraction. You can explore different situations with the short program below which gives you control over the refractive indices and the incident angles. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "83265383-c17d-44e0-9321-0e59734b3de5",
   "metadata": {
    "nbsphinx": "hidden",
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 346,
       "width": 377
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(4, 4))\n",
    "fig.canvas.header_visible = False\n",
    " \n",
    "#@widgets.interact(n1=(1,2,0.01),n2=(1,3,0.01), angle=(0, 90, 0.1))\n",
    "def update(n1=1,n2=1.5,angle=45):\n",
    "    \"\"\"Remove old lines from plot and plot new one\"\"\"\n",
    "    ax.cla()\n",
    "    theta1=angle*np.pi/180\n",
    "    if n1*np.sin(theta1)/n2<=1:\n",
    "        theta2=np.arcsin(n1*np.sin(theta1)/n2)\n",
    "    else:\n",
    "        theta2=-theta1+np.pi\n",
    "    #ax.set_title(\"Refraction Explorer\")    \n",
    "    ax.axvline(x=0,ls='--')\n",
    "    ax.text(-0.04,0.04,r'$n_2$={}'.format(n2))\n",
    "    ax.text(-0.04,-0.04,r'$n_1$={}'.format(n1))\n",
    "    ax.text(0.03,0.04,r'$\\theta_2$={}'.format(round(theta2*180/np.pi),1))\n",
    "    ax.text(0.03,-0.04,r'$\\theta_1$={}'.format(round(theta1*180/np.pi),1))\n",
    "\n",
    "\n",
    "    ax.axhline(y=0,color='k',lw=0.5)\n",
    "    ax.quiver(0,0,np.sin(theta1),np.cos(theta1),scale=3,pivot='tip' ,color='red')\n",
    "    ax.quiver(0,0,np.sin(theta2),np.cos(theta2),scale=3,color='blue')\n",
    "    \n",
    "update()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "649507c0-8ec5-4f74-ad43-20c97ea7dfbe",
   "metadata": {
    "slideshow": {
     "slide_type": ""
    },
    "tags": []
   },
   "source": [
    "#### Refraction on spherical boundary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6e480b-9ebc-4f7e-9765-b174f791899a",
   "metadata": {},
   "source": [
    "Many of the interesting situations of refraction occur on interfaces, which are curved. Lenses, for example, have curved surfaces and the angles of refraction therefore change depending on the position. We can model in the simplest case by a spherical surface or in 2D just by a circular interface. The diagram below shows the definition of such a situation."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f94f2c08-ad35-444e-a820-9ad895826089",
   "metadata": {},
   "source": [
    "| <center> <img src=\"refraction_spherical.png\" width=\"500\"/> </center> |\n",
    "|:-:|\n",
    "| **Figure 1:** Refraction at a spherical surface |"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55d401ed-2e52-4b36-9099-0b9c80ae3179",
   "metadata": {},
   "source": [
    "According to the drawing we have the following relation\n",
    "\n",
    "\\begin{equation}-\\theta_2+(\\pi-\\alpha)+\\delta=\\pi\n",
    "\\end{equation}\n",
    "\n",
    "which results in \n",
    "\n",
    "\\begin{equation}\n",
    "-\\theta_2+\\pi-\\alpha+\\delta=\\pi\n",
    "\\end{equation}\n",
    "\n",
    "and finally \n",
    "\n",
    "\\begin{equation}\n",
    "\\delta=\\alpha+\\theta_2\n",
    "\\end{equation}\n",
    "\n",
    "Note that we have used a minus sign in front of $\\theta_2$ in the drawing and the equations. The reason for this is tha fact that we have a different turning direction for $\\theta_1$ and $\\theta_2$. If we define a positive sense for $\\theta_1$ then $\\theta_2$ must be negative.\n",
    "We further can identify the following relations for the angles $\\alpha$, $\\theta_1$ and $\\theta_2$\n",
    "\n",
    "\\begin{equation}\n",
    "\\sin(\\alpha)=\\frac y R,\\, \\tan(\\theta_2)=\\frac{y}{z_2},\\, \\tan(\\theta_1)=\\frac{y}{z_1}\n",
    "\\end{equation}\n",
    "\n",
    "from the radius of curvature of the spherical surface $R$, the distance $y$ where the ray hits the spherical surface and the object point and image point distance $z_1$ and $z_2$.\n",
    "\n",
    "\\begin{equation}\n",
    "n_1\\sin(\\alpha+\\theta_1)=n_2\\sin(\\alpha+\\theta_2)\n",
    "\\end{equation}\n",
    "\n",
    "This is a nonlinear equation and difficult to solve. Yet we can just linearize the angular functions just by assuming that all angles are small. This approximation is called the **paraxial approximation** and very important in optics. It not only means that the angle are small, but also that the light rays propagate close to the optical axis. \n",
    "\n",
    "Using the linearization: $\\sin(x)\\approx x$ we now obtain\n",
    "\n",
    "\\begin{equation}\n",
    "n_1(\\alpha+\\theta_1)=n_2(\\alpha-\\theta_2)\n",
    "\\end{equation}\n",
    "\n",
    "Expanding the brackets leads to\n",
    "\\begin{equation}\n",
    "n_1\\alpha+n_1\\theta_1=n_2\\alpha-n_2\\theta_2\n",
    "\\end{equation}\n",
    "\n",
    "which we can transform into \n",
    "\n",
    "\\begin{equation}\n",
    "n_2\\theta_2=(n_1-n_2)\\alpha+n_1\\theta_1\n",
    "\\end{equation}\n",
    "\n",
    "to finally obtain\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_2=-\\frac{n_2-n_1}{n_2}\\alpha+\\frac{n_1}{n_2}\\theta_1\n",
    "\\end{equation}\n",
    "\n",
    "There is still the angle $\\alpha$ we can remove by inserting the corresponding relations we have noted on the top. This leads to \n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_2\\approx \\frac{n_1}{n_2}\\theta_1-\\frac{n_2-n_1}{n_2R}y\n",
    "\\end{equation}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13d65ffe-2aab-48bc-b504-9cf0e55d3a7a",
   "metadata": {},
   "source": [
    "#### Conjugated Planes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28d939fa-349a-460d-b1d7-553e2d4e1830",
   "metadata": {},
   "source": [
    "The importance of the result above can be seen when sending two different rays from a point $P_1$ on the objects side and see where the meet on the other side. Consider the following drawing:\n",
    "\n",
    "\n",
    "| <center> <img src=\"conjugated_planes.png\" width=\"500\"/> </center> |\n",
    "|:-:|\n",
    "| **Figure 3:** Refraction at a spherical surface |\n",
    "\n",
    "In this drawing, we have two different ray which take a different path. Lets assume, the refractive index on both sides is not so much different such that:\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{\\Delta y}{z_2}=\\frac{y}{z_1}\n",
    "\\end{equation}\n",
    "\n",
    "We can then use two ray with different input, e.g., $\\theta_1=0$ for the first ray and $y=0$ for the second ray. Thus the right side of the formula we derived above is either zero for the first or the second term.\n",
    "\n",
    "\\begin{equation}\n",
    "\\textrm{ray} (1)\\quad \\theta_1=0 \\quad \\Rightarrow \\quad \\theta_2^1=-\\frac{n_2-n_1}{n_2 R}y, \\quad \\tan \\theta_2^{1}=\\frac{\\Delta y+y}{z_2}\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{\\Delta y+y}{z_2}=-\\frac{n_2-n_1}{n_2R}y\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\textrm{ray} (2) \\quad y=0 \\quad \\quad n_2 \\theta_2^2=n_1\\theta_1^2\n",
    "\\end{equation}\n",
    "\n",
    "from which follows \n",
    "\n",
    "\\begin{equation}\n",
    "\\Delta y =\\frac{z_2}{z_1}\\frac{n_1}{n_2}y\n",
    "\\end{equation}\n",
    "\n",
    "which we can insert for $\\Delta y$ in \n",
    "\n",
    "\\begin{equation}\n",
    "\\Delta y+y=-\\frac{n_2-n_1}{n_2R}yz_2\n",
    "\\end{equation}\n",
    "\n",
    "to obtain\n",
    "\n",
    "\\begin{equation}\n",
    "y\\left(\\frac{z_2}{z_1}+1\\right)=-\\frac{n_2-n_1}{n_2R}z_2y\n",
    "\\end{equation}\n",
    "\n",
    "which gives\n",
    "\n",
    "\\begin{equation}\n",
    "\\left(\\frac{z_2}{z_1}+1\\right)=-\\frac{n_2-n_1}{n_2R}z_2\n",
    "\\end{equation}\n",
    "\n",
    "and thus finally\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{1}{z_1}+\\frac{1}{z_2}=-\\frac{n_2-n_1}{n_2R}\n",
    "\\end{equation}\n",
    "\n",
    "The latter equation is actually already at the level of a single spherical surface showing, that all points from a plane at the location $z_1$ is imaged to points in a plane $z_2$. There is no dependence on the position $y$ where the rays hit the spherical surface. The two planes are called **conjugated planes**. They belong together and form the foundation of imaging. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fe9fb8d-cbc0-4cae-95bf-e13b687e1862",
   "metadata": {},
   "source": [
    "#### Biconvex Lens"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7488c5a0-0da7-4588-bba6-536561df77ae",
   "metadata": {},
   "source": [
    "We can now take the equation for a single spherical surface and derive an expression for two spherical surfaces, which form a lens. \n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_2=\\frac{n_1}{n_2}\\theta_1-\\frac{n_2-n_1}{n_2R}y\n",
    "\\end{equation}\n",
    "\n",
    "\n",
    "| <center> <img src=\"lens_surface1.png\" width=\"400\"/> </center> | <center> <img src=\"lens_surface2.png\" width=\"400\"/> </center> |\n",
    "|:-:|:-|\n",
    "| **Figure 4:** For th refraction at two spherical boundaries, we would have to  |\n",
    "\n",
    "first refraction, $n_1=1, n_2=n$\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_t=\\frac 1 n \\theta_1-\\frac{n-1}{nR_1}y\n",
    "\\end{equation}\n",
    "\n",
    "second refraction, $n_1=n, n_2=1$\n",
    "\n",
    "\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_t \\rightarrow \\theta_1, y \\rightarrow y\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_2=\\frac n 1 \\theta_t-\\frac{1-n}{R_2}y\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_2=\\frac n 1 \\left(\\frac 1 n \\theta_1-\\frac{n-1}{nR_1} y\\right)-\\frac{1-n}{R_2}y\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_2=\\theta_1-\\frac{n-1}{R_1}y-\\frac{1-n}{R_2}y=\\theta_1-\\left(\\frac{n-1}{R_1}+\\frac{1-n}{R_2}\\right)y\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{n-1}{R_1}+\\frac{1-n}{R_2}=(n-1)\\left(\\frac{1}{R_1}-\\frac{1}{R_2}\\right)=\\frac 1 f\n",
    "\\end{equation}\n",
    "\n",
    "lens maker equation, it tells what radii to use if you want to make a lens with $f$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c7fa18b-020b-4f59-b55f-5b59213d0d96",
   "metadata": {
    "tags": []
   },
   "source": [
    "\\begin{equation}\n",
    "\\theta_2=\\theta_1-\\frac y f\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\theta_2=\\frac{y}{z_2},\\quad \\theta_1=\\frac{y}{z_1}\n",
    "\\end{equation}\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{y}{z_2}=\\frac{y}{z_1}-\\frac y f \\quad \\Rightarrow \\quad \\frac{1}{z_1}+\\frac{1}{z_2}=\\frac 1 f\n",
    "\\end{equation}\n",
    "\n",
    "flipped the sign of one $z$ since it is going to the other direction\n",
    "\n",
    "\n",
    "\\begin{equation}\n",
    "y_2=-\\frac{z_2}{z_1}y_1\n",
    "\\end{equation}\n",
    "\n",
    "magnification.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44317e43-5a72-45c8-93a3-bc163095bffb",
   "metadata": {
    "tags": []
   },
   "source": [
    "## Aberrations\n",
    "\n",
    "\n",
    "**Spherical Aberration**\n",
    "\n",
    "The linearization we did with the angular functions comes at a cost. The spherical shape is only a good optical surface if we have incident rays that are incident under small angles. At larger angles the sine function is not anymore well represented by a linear function and the paraxial approximation gets increasing bad.\n",
    "\n",
    "\\begin{equation}\n",
    "\\sin(x)\\approx x-\\frac{x^3}{6}+\\frac{x^5}{120}+ \\dots\n",
    "\\end{equation}\n",
    "\n",
    "The plot below shows the accuracy of the linear and the cubic approximation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "63518faf-835e-4bc1-b79c-9b76919a46df",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<script src='https://d3js.org/d3.v6.min.js'></script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x300 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 320,
       "width": 333
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(2,2),dpi=150)\n",
    "x=np.linspace(0,np.pi/2,100)\n",
    "plt.plot(x,np.sin(x),\"k\",label=\"exact\")\n",
    "plt.plot(x,x,\"k--\",label=\"linear\")\n",
    "plt.plot(x,x-x**3/6,\"k-.\",label=\"second order\")\n",
    "plt.legend(fontsize=6)\n",
    "plt.xlabel(\"x [rad]\")\n",
    "plt.ylabel(\"y\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b34dd1be-5649-4b2e-8c24-0a8ffb72e404",
   "metadata": {},
   "source": [
    "The linear approximation is only good when\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{x^3}{6} \\ll x \\quad \\rm{or} \\quad \\frac{x^2}{6} \\ll 1 \\quad \\rm{or} \\quad x \\ll 0.4\\:\\:\\rm{in~radians}\n",
    "\\end{equation}\n",
    "\n",
    "According to that all angles should be below about $23^{\\circ}$ for the paraxial apprimation to work nicely. This is not true for microscopy lenses, for example, there we have angles up to $80^{\\circ}$. The approximation is then not wrong, but just not accurate enough to describe ray propagation.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37bad0b2-8676-4bef-bcb9-36e8543332c9",
   "metadata": {
    "tags": []
   },
   "source": [
    "| <center> <img src=\"spherical_aberrations.png\" width=\"400\"/> </center> |\n",
    "|:-:|\n",
    "| **Figure 4:** Spherical aberrations at a spherical lens. Rays the are incident far away from the optical axis are refracted more than rays close to the optical axis due to the spherical shape of the surface.  |"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6312f61c-9644-4e67-9bc0-76d20613d61f",
   "metadata": {},
   "source": [
    "### Aberration Characterization and Zernike Polynomials"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8decad9-d56e-4aba-885e-3ab44ebcfa75",
   "metadata": {},
   "source": [
    "The Zernike polynomials are a set of orthonormal polynomials that are widely used in optics to describe wavefronts and to characterize optical aberrations. As we did not discuss wavefronts and waves yet, this is a more advanced topic here and only for information. Zernike polynomials are defined over the unit disk and are particularly useful because they are orthogonal under the inner product, which involves integration over the unit circle. This makes them suitable for decomposing a wavefront into a sum of orthogonal modes, each representing a different type of aberration.\n",
    "\n",
    "The general form of the Zernike polynomials can be expressed in polar coordinates $$(\\rho, \\phi)$$, where $$\\rho$$ is the radial distance from the origin (normalized to the unit circle) and $$\\phi$$ is the azimuthal angle. The Zernike polynomials are defined as:\n",
    "\n",
    "$$\n",
    "Z_n^m(\\rho, \\phi) = \n",
    "\\begin{cases} \n",
    "R_n^m(\\rho) \\cos(m\\phi) & \\text{for } m \\geq 0 \\\\\n",
    "R_n^{|m|}(\\rho) \\sin(|m|\\phi) & \\text{for } m < 0\n",
    "\\end{cases}\n",
    "$$\n",
    "\n",
    "where $$n$$ is a non-negative integer, $$m$$ is an integer such that $$n - |m|$$ is even and $$0 \\leq |m| \\leq n$$, and $$R_n^m(\\rho)$$ is the radial polynomial given by:\n",
    "\n",
    "$$\n",
    "R_n^m(\\rho) = \\sum_{k=0}^{\\frac{n-m}{2}} \\frac{(-1)^k (n-k)!}{k! \\left(\\frac{n+m}{2} - k\\right)! \\left(\\frac{n-m}{2} - k\\right)!} \\rho^{n-2k}\n",
    "$$\n",
    "\n",
    "The radial polynomials $$R_n^m(\\rho)$$ are only dependent on the radial distance $$\\rho$$, and they modulate the angular functions $$\\cos(m\\phi)$$ and $$\\sin(|m|\\phi)$$ that describe the azimuthal variation of the wavefront.\n",
    "\n",
    "The Zernike polynomials are indexed in several ways, with one common method being the Noll index, which provides a single index $$j$$ to each polynomial. Another method uses the pair $$(n, m)$$ to index the polynomials, where $$n$$ indicates the order of the polynomial and $$m$$ its azimuthal frequency.\n",
    "\n",
    "These polynomials are particularly useful in optics and ophthalmology for describing the shape of optical wavefronts and the aberrations of optical systems, including the human eye. They allow for the decomposition of a complex wavefront into simpler, orthogonal components, each corresponding to a specific type of aberration, such as defocus, astigmatism, coma, etc.\n",
    "\n",
    "The plots below visualize the Zernike Polynomials up to a certain order."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2409ba4a-3021-40a7-afac-bf9998efe9ff",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'np' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[1], line 21\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m     19\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m radial_polynomial(n, \u001b[38;5;241m-\u001b[39mm, rho) \u001b[38;5;241m*\u001b[39m np\u001b[38;5;241m.\u001b[39msin(\u001b[38;5;241m-\u001b[39mm \u001b[38;5;241m*\u001b[39m phi)\n\u001b[0;32m---> 21\u001b[0m x \u001b[38;5;241m=\u001b[39m \u001b[43mnp\u001b[49m\u001b[38;5;241m.\u001b[39mlinspace(\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m400\u001b[39m)\n\u001b[1;32m     22\u001b[0m y \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mlinspace(\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m400\u001b[39m)\n\u001b[1;32m     23\u001b[0m xx, yy \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mmeshgrid(x, y)\n",
      "\u001b[0;31mNameError\u001b[0m: name 'np' is not defined"
     ]
    }
   ],
   "source": [
    "def radial_polynomial(n, m, rho):\n",
    "    \"\"\"\n",
    "    Compute the radial component of the Zernike polynomial.\n",
    "    \"\"\"\n",
    "    R = np.zeros_like(rho)\n",
    "    for k in range((n - abs(m)) // 2 + 1):\n",
    "        R += ((-1)**k * np.math.factorial(n - k) /\n",
    "              (np.math.factorial(k) * np.math.factorial((n + abs(m)) // 2 - k) *\n",
    "               np.math.factorial((n - abs(m)) // 2 - k))) * rho**(n - 2*k)\n",
    "    return R\n",
    "\n",
    "def zernike_polynomial(n, m, rho, phi):\n",
    "    \"\"\"\n",
    "    Compute the Zernike polynomial.\n",
    "    \"\"\"\n",
    "    if m >= 0:\n",
    "        return radial_polynomial(n, m, rho) * np.cos(m * phi)\n",
    "    else:\n",
    "        return radial_polynomial(n, -m, rho) * np.sin(-m * phi)\n",
    "\n",
    "x = np.linspace(-1, 1, 400)\n",
    "y = np.linspace(-1, 1, 400)\n",
    "xx, yy = np.meshgrid(x, y)\n",
    "rho = np.sqrt(xx**2 + yy**2)\n",
    "phi = np.arctan2(yy, xx)\n",
    "\n",
    "mask = rho > 1\n",
    "rho[mask] = np.nan\n",
    "\n",
    "fig, axs = plt.subplots(3, 6, figsize=(8, 4))\n",
    "axs = axs.flatten()\n",
    "\n",
    "index = 0\n",
    "for n in range(6):\n",
    "    for m in range(-n, n+1, 2):\n",
    "        if index >= len(axs): \n",
    "            break\n",
    "        Z = zernike_polynomial(n, m, rho, phi)\n",
    "        Z[mask] = np.nan  # Apply mask\n",
    "        ax = axs[index]\n",
    "        c = ax.imshow(Z, extent=(-1, 1, -1, 1), origin='lower')\n",
    "        ax.set_title(f'n={n}, m={m}')\n",
    "        ax.axis('off')\n",
    "        index += 1\n",
    "    \n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "83b7d7df-c25c-4eff-86a7-f61d8b263652",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
